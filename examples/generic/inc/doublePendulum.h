#pragma once
#include <Eigen/Dense>
#include <cmath>
using Eigen::Matrix;
struct DoublePendulum {
    using Input = Matrix<double, 1, 1>;
    using State = Matrix<double, 6, 1>;
    Input u{};
    State state{};
    void setInput(const Input &input) { u = input; }
    void compute(uint32_t dt) {
        auto x = state(0);
        auto dx = state(1);
        auto phi1 = state(2);
        auto dphi1 = state(3);
        auto phi2 = state(4);
        auto dphi2 = state(5);
        auto F = u(0);
        State tmp{};
        tmp[0] = dx;
        tmp[1] = (9.1441406250000024e-5*F*pow(cos(phi1), 2)*pow(cos(phi1 - phi2), 2) - 0.00033782519531250004*F*pow(cos(phi1), 2) + 2.7105054312137611e-20*F*cos(phi1)*cos(phi2)*cos(phi1 - phi2) - 2.7105054312137611e-20*F*pow(cos(phi2), 2) - 0.0065634609374999988*F*pow(cos(phi1 - phi2), 2) + 0.024248341796874993*F + 6.8581054687500023e-6*pow(dphi1, 2)*sin(phi1)*pow(cos(phi1), 2)*pow(cos(phi1 - phi2), 2) - 2.5336889648437505e-5*pow(dphi1, 2)*sin(phi1)*pow(cos(phi1), 2) + 1.6940658945086007e-21*pow(dphi1, 2)*sin(phi1)*cos(phi1)*cos(phi2)*cos(phi1 - phi2) - 0.00049225957031250002*pow(dphi1, 2)*sin(phi1)*pow(cos(phi1 - phi2), 2) + 0.0018186256347656245*pow(dphi1, 2)*sin(phi1) - 6.8581054687500023e-6*pow(dphi1, 2)*sin(phi1 - phi2)*pow(cos(phi1), 3)*cos(phi1 - phi2) + 7.2391113281250003e-6*pow(dphi1, 2)*sin(phi1 - phi2)*pow(cos(phi1), 2)*cos(phi2) + 0.00049225957031250002*pow(dphi1, 2)*sin(phi1 - phi2)*cos(phi1)*cos(phi1 - phi2) - 0.00051960732421874988*pow(dphi1, 2)*sin(phi1 - phi2)*cos(phi2) + 4.0498762790596242e-24*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 3)*cos(phi2)*cos(phi1 - phi2) - 4.2748694056740464e-24*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 2)*pow(cos(phi2), 2) + 2.2860351562500008e-6*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 2)*pow(cos(phi1 - phi2), 2) - 8.4456298828125018e-6*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 2) - 8.4703294725430034e-22*pow(dphi2, 2)*sin(phi2)*cos(phi1)*cos(phi2)*cos(phi1 - phi2) - 0.00016408652343749997*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1 - phi2), 2) + 0.00060620854492187477*pow(dphi2, 2)*sin(phi2) - 8.0011230468750031e-6*pow(dphi2, 2)*sin(phi1 - phi2)*pow(cos(phi1), 3) + 2.2860351562500008e-6*pow(dphi2, 2)*sin(phi1 - phi2)*pow(cos(phi1), 2)*cos(phi2)*cos(phi1 - phi2) - 4.2351647362715017e-22*pow(dphi2, 2)*sin(phi1 - phi2)*cos(phi1)*pow(cos(phi2), 2) + 0.00057430283203124995*pow(dphi2, 2)*sin(phi1 - phi2)*cos(phi1) - 0.00016408652343749997*pow(dphi2, 2)*sin(phi1 - phi2)*cos(phi2)*cos(phi1 - phi2) + 0.00047094610253906272*sin(phi1)*pow(cos(phi1), 3) - 0.00013455602929687502*sin(phi1)*pow(cos(phi1), 2)*cos(phi2)*cos(phi1 - phi2) - 0.033803464693359375*sin(phi1)*cos(phi1) + 0.0096581327695312493*sin(phi1)*cos(phi2)*cos(phi1 - phi2) - 0.00013455602929687504*sin(phi2)*pow(cos(phi1), 3)*cos(phi1 - phi2) + 0.00014203136425781251*sin(phi2)*pow(cos(phi1), 2)*cos(phi2) + 0.0096581327695312493*sin(phi2)*cos(phi1)*cos(phi1 - phi2) - 0.010194695701171871*sin(phi2)*cos(phi2))/(4.8006738281250019e-5*pow(cos(phi1), 4) - 2.7432421875000009e-5*pow(cos(phi1), 3)*cos(phi2)*cos(phi1 - phi2) + 1.4478222656250004e-5*pow(cos(phi1), 2)*pow(cos(phi2), 2) + 0.00093270234375000013*pow(cos(phi1), 2)*pow(cos(phi1 - phi2), 2) - 0.0068916339843749994*pow(cos(phi1), 2) + 0.0019690382812499996*cos(phi1)*cos(phi2)*cos(phi1 - phi2) - 0.0010392146484374998*pow(cos(phi2), 2) - 0.066947301562499978*pow(cos(phi1 - phi2), 2) + 0.24733308632812487);
        tmp[2] = dphi1;
        tmp[3] = (6.2753906250000025e-5*F*pow(cos(phi1), 3) - 1.7929687500000001e-5*F*pow(cos(phi1), 2)*cos(phi2)*cos(phi1 - phi2) + 3.3881317890172014e-21*F*cos(phi1)*pow(cos(phi2), 2) - 0.0045043359374999994*F*cos(phi1) + 0.0012869531249999999*F*cos(phi2)*cos(phi1 - phi2) + 4.7065429687500025e-6*pow(dphi1, 2)*sin(phi1)*pow(cos(phi1), 3) - 1.3447265625000006e-6*pow(dphi1, 2)*sin(phi1)*pow(cos(phi1), 2)*cos(phi2)*cos(phi1 - phi2) + 2.1175823681357508e-22*pow(dphi1, 2)*sin(phi1)*cos(phi1)*pow(cos(phi2), 2) - 0.00033782519531250004*pow(dphi1, 2)*sin(phi1)*cos(phi1) + 9.6521484374999995e-5*pow(dphi1, 2)*sin(phi1)*cos(phi2)*cos(phi1 - phi2) - 1.3447265625000006e-6*pow(dphi1, 2)*sin(phi1 - phi2)*pow(cos(phi1), 3)*cos(phi2) + 9.1441406250000024e-5*pow(dphi1, 2)*sin(phi1 - phi2)*pow(cos(phi1), 2)*cos(phi1 - phi2) + 9.6521484375000009e-5*pow(dphi1, 2)*sin(phi1 - phi2)*cos(phi1)*cos(phi2) - 0.0065634609374999988*pow(dphi1, 2)*sin(phi1 - phi2)*cos(phi1 - phi2) + 7.9409338805090672e-25*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 3)*pow(cos(phi2), 2) + 1.5688476562500007e-6*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 3) - 4.482421875000002e-7*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 2)*cos(phi2)*cos(phi1 - phi2) - 0.0001126083984375*pow(dphi2, 2)*sin(phi2)*cos(phi1) + 3.2173828125000003e-5*pow(dphi2, 2)*sin(phi2)*cos(phi2)*cos(phi1 - phi2) - 4.4824218750000015e-7*pow(dphi2, 2)*sin(phi1 - phi2)*pow(cos(phi1), 2)*pow(cos(phi2), 2) + 0.00010668164062500003*pow(dphi2, 2)*sin(phi1 - phi2)*pow(cos(phi1), 2) + 3.2173828125000003e-5*pow(dphi2, 2)*sin(phi1 - phi2)*pow(cos(phi2), 2) - 0.0076573710937499987*pow(dphi2, 2)*sin(phi1 - phi2) + 2.6383535156250014e-5*sin(phi1)*pow(cos(phi1), 2)*pow(cos(phi2), 2) - 0.006279281367187502*sin(phi1)*pow(cos(phi1), 2) - 4.3368086899420177e-19*sin(phi1)*cos(phi1)*cos(phi2)*cos(phi1 - phi2) - 0.0018937515234375003*sin(phi1)*pow(cos(phi2), 2) + 1.3877787807814457e-17*sin(phi1)*pow(cos(phi1 - phi2), 2) + 0.45071286257812493*sin(phi1) - 2.6383535156250011e-5*sin(phi2)*pow(cos(phi1), 3)*cos(phi2) + 0.0017940803906250004*sin(phi2)*pow(cos(phi1), 2)*cos(phi1 - phi2) + 0.0018937515234374999*sin(phi2)*cos(phi1)*cos(phi2) - 0.12877510359374997*sin(phi2)*cos(phi1 - phi2))/(4.7065429687500025e-6*pow(cos(phi1), 4) - 2.6894531250000012e-6*pow(cos(phi1), 3)*cos(phi2)*cos(phi1 - phi2) + 1.4194335937500006e-6*pow(cos(phi1), 2)*pow(cos(phi2), 2) + 9.1441406250000024e-5*pow(cos(phi1), 2)*pow(cos(phi1 - phi2), 2) - 0.00067565039062500009*pow(cos(phi1), 2) + 0.00019304296875000002*cos(phi1)*cos(phi2)*cos(phi1 - phi2) - 0.00010188378906249999*pow(cos(phi2), 2) - 0.0065634609374999988*pow(cos(phi1 - phi2), 2) + 0.024248341796874993);
        tmp[4] = dphi2;
        tmp[5] = (-0.0095625000000000016*F*cos(phi1)*cos(phi1 - phi2) + 0.010093749999999999*F*cos(phi2) - 0.00071718750000000016*pow(dphi1, 2)*sin(phi1)*cos(phi1)*cos(phi1 - phi2) + 0.00075703125*pow(dphi1, 2)*sin(phi1)*cos(phi2) + 0.00071718750000000016*pow(dphi1, 2)*sin(phi1 - phi2)*pow(cos(phi1), 2) - 0.051478124999999993*pow(dphi1, 2)*sin(phi1 - phi2) - 4.2351647362715017e-22*pow(dphi2, 2)*sin(phi2)*pow(cos(phi1), 2)*cos(phi2) - 0.00023906250000000004*pow(dphi2, 2)*sin(phi2)*cos(phi1)*cos(phi1 - phi2) + 0.00025234375000000002*pow(dphi2, 2)*sin(phi2)*cos(phi2) + 0.00023906250000000004*pow(dphi2, 2)*sin(phi1 - phi2)*cos(phi1)*cos(phi2) - 0.01625625*pow(dphi2, 2)*sin(phi1 - phi2)*cos(phi1 - phi2) - 0.014071218750000005*sin(phi1)*cos(phi1)*cos(phi2) + 0.95684287500000009*sin(phi1)*cos(phi1 - phi2) + 0.014071218750000003*sin(phi2)*pow(cos(phi1), 2) - 1.0100008124999997*sin(phi2))/(0.00083671875000000022*pow(cos(phi1), 2) - 0.00047812500000000009*cos(phi1)*cos(phi2)*cos(phi1 - phi2) + 0.00025234375000000002*pow(cos(phi2), 2) + 0.01625625*pow(cos(phi1 - phi2), 2) - 0.060057812499999988);
        state += dt / 1000. * tmp;
    };
};
